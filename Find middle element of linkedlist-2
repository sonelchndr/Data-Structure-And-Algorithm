
public class LinkedList {
	

		Node head;
		 class Node
		 {
			int data;
			Node next;
			Node(int d)
			{
				data=d;
				next=null;
			}
		 }
		 
		
		 public void push(int new_data)
		   {
			   Node new_node=new Node(new_data);
			   new_node.next=head;
			   head =new_node;
		   }
		 
		 
		 public void getmiddle()
		 {
			 
			/* Node slow_ptr=head;
			 Node fast_ptr=head;
			 if(head!=null)
			 {
				 while(fast_ptr!=null && fast_ptr.next !=null)
				 {
			   		 fast_ptr=fast_ptr.next.next;
			   		 slow_ptr=slow_ptr.next;
		         }
				 System.out.print("the middle element is");
				 System.out.println(slow_ptr.data);
		 }*/
			 
			 Node current=head;
			 int count=0;
			 while(current!=null)
			   {
			       count++;
			       current=current.next;
			       
			   }
			   Node start=head;
			   for(int i=0;i<count/2;i++)
			   {
			       start=start.next;
			   }
			   System.out.println( start.data);
			   
			   
			   }
			
		 
		 public void printList()
		 {
			 Node n=head;
			 while(n!=null)
			 {
				 System.out.println(n.data+" ");
				 n=n.next;
			 }
		 }

		public static void main(String[] args) {
			LinkedList llist=new LL();
			llist.push(30);
			llist.push(20);
			llist.push(10);
			llist.push(5);
			llist.printList();
			llist.getmiddle();
			
			
		}
