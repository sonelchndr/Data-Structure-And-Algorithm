

public class LinkedList {
	Node head;
	 class Node
	 {
		int data;
		Node next;
		Node(int d)
		{
			data=d;
			next=null;
		}
	 }
	 
	 public void append(int new_data)
	 {
		 Node new_node=new Node(new_data);
		 if(head==null)
		 {
			 head=new Node(new_data);
			 return;
		 }
		 new_node.next=null; //make next of new_node as null as it is last
		  Node last=head;
		  while(last.next!=null)
		  
			  last=last.next;
		      last.next=new_node;
		      return;
		  
	 }
   
   
   
	 void deleteNode(int key)
	 {
		 
		 Node temp=head,prev=null;
		 
		 if(temp!=null && temp.data==key)//if head node holds the key to be deleted
		 {
			 head=temp.next;
			 return;
		 }
		 
		 
		 while (temp != null && temp.data != key) 
	        { 
	            prev = temp; 
	            temp = temp.next; 
	        } 
	 
		 
		 // If key was not present in linked list 
	        if (temp == null) 
	        	return; 
	 
	        // Unlink the node from linked list 
	        prev.next = temp.next; 
	 
	 }
	 
	 public void deletefull()
	 {
		 head=null;
	 }
	 
	 
	 public void printList()
	 {
		 Node n=head;
		 while(n!=null)
		 {
			 System.out.println(n.data+" ");
			 n=n.next;
		 }
	 }

	public static void main(String[] args) {
		LinkedList llist=new LinkeList();
		llist.append(20);
		llist.append(30);
		llist.append(40);
		llist.printList();
		llist.deleteNode(30);
		llist.printList();
		llist.deletefull();
		llist.printList();
		
	}

}
